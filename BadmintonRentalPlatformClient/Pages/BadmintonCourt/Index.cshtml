@page
@model Pages.BadmintonCourt.IndexModel
@{
    ViewData["Title"] = "Badminton Courts";
}

<!-- Breadcrumb Section Begin -->
<div class="breadcrumb-section">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb-text">
                    <h2>Our Badminton Court</h2>
                    <div class="bt-option">
                        <a href="/Index">Home</a>
                        <span>Badminton Court</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Breadcrumb Section End -->
<!-- Rooms Section Begin -->
<section class="rooms-section spad">
    <div class="container">
        <div class="row" id="badminton-court-list">
            <!-- Nội dung sẽ được JavaScript chèn vào đây -->
        </div>
        <div class="room-pagination">
            <a href="#" id="prev-page">Previous</a>
            <span id="pagination-info"></span>
            <a href="#" id="next-page">Next</a>
        </div>
    </div>
</section>
<!-- Rooms Section End -->

<script>
    document.addEventListener('DOMContentLoaded', async function () {
        let currentPage = 1;
        const pageSize = 6;

        function formatCurrency(value) {
            return value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        }

        async function fetchCourts(page) {
            const apiUrl = `https://localhost:7020/api/v1/badminton-courts/paging?page=${page}&size=${pageSize}`;

            try {
                const response = await fetch(apiUrl);
                const data = await response.json();

                if (data.statusCode === 200) {
                    const pagedResult = data.data;
                    const courtData = pagedResult.items;
                    const courtList = document.getElementById('badminton-court-list');
                    courtList.innerHTML = '';

                    for (const court of courtData) {
                        try {
                            const courtsResponse = await fetch(`https://localhost:7020/api/v1/courts?badmintonCourtId=${court.id}`);
                            const courtsData = await courtsResponse.json();

                            if (courtsData.statusCode === 200) {
                                const courts = courtsData.data;

                                // Calculate min and max prices
                                let minPrice = Infinity;
                                let maxPrice = 0;

                                courts.forEach(courtItem => {
                                    if (courtItem.price < minPrice) {
                                        minPrice = courtItem.price;
                                    }
                                    if (courtItem.price > maxPrice) {
                                        maxPrice = courtItem.price;
                                    }
                                });

                                const priceText = minPrice !== Infinity && maxPrice !== 0 ? `${formatCurrency(minPrice)} - ${formatCurrency(maxPrice)} vnđ` : 'N/A';

                                const firstImage = (court.courtImagePaths && court.courtImagePaths.length > 0) ? court.courtImagePaths[0] : 'img/default-court.jpg';

                                const courtHTML = `
                                <div class="col-lg-4 col-md-6">
                                    <div class="room-item">
                                        <img src="${firstImage}" alt="">
                                        <div class="ri-text">
                                            <h4>${court.courtName}</h4>
                                            <h3>${priceText}<span></span></h3>
                                            <table>
                                                <tbody>
                                                    <tr>
                                                        <td class="r-o">Size:</td>
                                                        <td>${court.courtNumber}</td>
                                                    </tr>
                                                    <tr>
                                                        <td class="r-o">Start Time:</td>
                                                        <td>${court.startTime}</td>
                                                    </tr>
                                                    <tr>
                                                        <td class="r-o">End Time:</td>
                                                        <td>${court.endTime}</td>
                                                    </tr>
                                                    <tr>
                                                        <td class="r-o">Address:</td>
                                                        <td>${court.address}</td>
                                                    </tr>
                                                    <tr>
                                                        <td class="r-o">Rating:</td>
                                                        <td>${court.rating}</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <a href="/BadmintonCourt/Details/${court.id}" class="primary-btn">More Details</a>
                                        </div>
                                    </div>
                                </div>`;
                                courtList.innerHTML += courtHTML;
                            } else {
                                console.error('Failed to fetch courts data: ', courtsData.message);
                            }
                        } catch (error) {
                            console.error('Error fetching courts data: ', error);
                        }
                    }

                    const paginationInfo = document.getElementById('pagination-info');
                    paginationInfo.innerText = `Page ${pagedResult.currentPage} of ${pagedResult.totalPages}`;

                    document.getElementById('prev-page').style.display = pagedResult.currentPage > 1 ? 'inline' : 'none';
                    document.getElementById('next-page').style.display = pagedResult.currentPage < pagedResult.totalPages ? 'inline' : 'none';
                } else {
                    console.error('Failed to fetch data: ', data.message);
                }
            } catch (error) {
                console.error('Error fetching data: ', error);
            }
        }

        document.getElementById('prev-page').addEventListener('click', function (event) {
            event.preventDefault();
            if (currentPage > 1) {
                currentPage--;
                fetchCourts(currentPage);
            }
        });

        document.getElementById('next-page').addEventListener('click', function (event) {
            event.preventDefault();
            currentPage++;
            fetchCourts(currentPage);
        });

        // Fetch initial courts list
        fetchCourts(currentPage);
    });

</script>
